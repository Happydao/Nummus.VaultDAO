name: Monitor Wallets and Balances

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    env:
      HELIUS_API_KEY: ${{ secrets.HELIUS_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install tools
        run: sudo apt-get install -y jq bc

      - name: Query token balances and write status
        run: |
          mkdir -p data

          MINT_TBTC="6DNSN2BJsaPFdFFc1zP37kkeNe4Usc1Sqkzr9C9vPWcU"
          MINT_NUMUS="9JK2U7aEkp3tWaFNuaJowWRgNys5DVaKGxWk73VT5ray"

          WALLET_1="AoXJQjDcK7C28ecdNVQjGjXW8V6nxR7NY7rBFhdhUc5B"
          WALLET_2="HtT3yMsAavLQYmd6VSbXSdbAefyZUrrFeEPoTPivde3s"
          API_KEY="$HELIUS_API_KEY"

          fetch_balance() {
            local WALLET=$1
            local MINT=$2
            curl -s "https://api.helius.xyz/v0/addresses/$WALLET/tokens?api-key=$API_KEY" | \
            jq -r --arg MINT "$MINT" '
              [ .[] | select(.mint == $MINT) | 
                (.amount | tonumber) / (10 ^ (.decimals | tonumber))
              ] | add // 0
            '
          }

          TBTC_BALANCE_1=$(fetch_balance $WALLET_1 $MINT_TBTC)
          TBTC_BALANCE_2=$(fetch_balance $WALLET_2 $MINT_TBTC)
          NUMUS_BALANCE=$(fetch_balance $WALLET_1 $MINT_NUMUS)

          echo "NUMUS balance (wallet 1): $NUMUS_BALANCE"
          echo "TBTC balance (wallet 1): $TBTC_BALANCE_1"
          echo "TBTC balance (vault): $TBTC_BALANCE_2"

          # Determina lo stato logico
          STATUS="swap_pending"
          if (( $(echo "$TBTC_BALANCE_1 > 0" | bc -l) )); then
            STATUS="awaiting_transfer"
          fi
          if (( $(echo "$TBTC_BALANCE_2 > 0" | bc -l) )); then
            STATUS="transferred"
          fi

          # Scrivi file JSON
          echo "{
            \"status\": \"$STATUS\",
            \"numus_balance\": \"$NUMUS_BALANCE\",
            \"numus_wallet_tbtc\": \"$TBTC_BALANCE_1\",
            \"vault_balance\": \"$TBTC_BALANCE_2\",
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
          }" > data/status.json

      - name: Commit changes if any
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git diff --quiet || (git add data/status.json && git commit -m "Update status" && git push)

      - name: Commit changes if any
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git diff --quiet || (git add data/status.json && git commit -m "Update status" && git push)
